2006-08-24  Vincent LADEUIL  <v.ladeuil@alplog.fr>
        Ensures that put is atomic.
	
	* webdav.py:
	(HttpDavTransport.put):  Makes  sure the  put  is  atomic even  on
	non-nocforming servers.

	* __init__.py: 
	Check  the  bzr version  here,  no need  to  import  just to  say:
	"Finally, I can't work".

2006-08-23  Vincent LADEUIL  <v.ladeuil@alplog.fr>
        Another fix recommanded by jam

	* test_webdav.py:
	(TestingDAVRequestHandler._read_chunk): Don't use string.atoi.

2006-08-23-1  Vincent LADEUIL  <v.ladeuil@alplog.fr>

	* test_webdav.py:
	(TestingDAVRequestHandler._read_chunk): Don't use string.atoi.

	* __init__.py: 
	Lazily register the  transports so that the module  is loaded when
	needed.

	* webdav.py: 
	Check the  bzr version and requires  a dev one. We  are not mature
	enough.
	Check pycurl availability before importing transport.http._pycurl.  
	Transports registration is now done in __init__.py (jam hint).
	(HttpDavTransport.__init__): Use the class name when calling super
	or it will create a loop if called by the daughter class :( Assert
	we can handle the protocol.
	(HttpDavTransport.put): Mentions that put  is atomic (by virtue of
	RFC2068). Don't handle string object anymore.
	(HttpDavTransport.rename):   Rename  should   not   overwrite  the
	destination URI.
	(get_test_permutations): import test_webdav when required only.

	* test_webdav.py: New file, extracted from webdav.py.
	(TestingDAVRequestHandler.do_COPY):  RFC2518  not  RFC2519!   Damn
	hhtp!
	(TestingDAVRequestHandler.do_MOVE):  Handles the  Overwrite header
	to conform  to bzr expectations concerning the  POSIX semantics of
	move and rename (thanks jam for the explanation).
	(HttpServer_Dav.__init__): Use  the class name  when calling super
	or it will create a loop if called by the daughter class :(

2006-08-22  Vincent LADEUIL  <v.ladeuil@alplog.fr>

	* webdav.py:
	(HttpDavTransport.mkdir,                     HttpDavTransport.copy,
	HttpDavTransport.move,        HttpDavTransport.delete):        Use
	_set_curl_options to unify the use of curl.
	(HttpDavTransport.put): Use _set_curl_options  to unify the use of
	curl. Translate 403 as NoSuchFile too.

2006-08-22-1  Vincent LADEUIL  <v.ladeuil@alplog.fr>

	*  webdav.py: Add  more TODOs  and FIXMEs  :-) Put  at  least this
	version passes bzr selftest (except for lock_write and copy_to for
	which need and.or intent is not clear.
	(HttpDavTransport.__init__,         _set_curl_options):        Use
	self.__class__.   We don't want  to change  the super()  call each
	time the class is renamed.
	(mkdir): Quotes should be right. Even in comment, even in jokes:-)
	(HttpDavTransport.copy): New method.
	(HttpDavTransport.put): 204! We expect 204 not 404.
	(HttpDavTransport.move): Raise exceptions on errors.
	(HttpDavTransport.delete):  Horrrrrrible workaround.   Try  to get
	devs advice asap.
	(TestingDAVRequestHandler,  HttpServer_Dav):  First implementation
	of a test server.

2006-08-20  Vincent LADEUIL
	First succesful  bzr.dev push.  Requires that bzr.dev  allows dirs
	for http.

	* webdav.py:
	(HttpDavTransport):  Renamed from  WebDavTransport,  but there  is
	HttpTransport_urllib and PyCurlTransport so it may change again...
	(HttpDavTransport._set_curl_options): New func, not yet used.
	(HttpDavTransport.mkdir):  Absorbs  data  otherwise  displayed  on
	stdout by libcurl.
	(HttpDavTransport.append): Documents that the position returned is
	the  one *before* the  append takes  place. The  implementation is
	still naive, but at least correct :-)
	(HttpDavTransport.put): Can be called  with a file-like object *or
	a  string* !  Handles the  string case.  Can also  be  called when
	intermediate directories are missing.
	(HttpDavTransport.move): Absorbs  data  otherwise  displayed  on
	stdout by libcurl.
	(HttpDavTransport.delete): Absorbs  data  otherwise  displayed  on
	stdout by libcurl.

 	* NOTES: 
	New file.
	
	* TODO: 
	New file.

2006-08-17  Vincent LADEUIL
	First version accepting an initial push.

	* __init__.py: 
	New file.

	* webdav.py:
	New file.

