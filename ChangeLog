2006-09-12  Vincent Ladeuil  <vila@imac-blanc.local>
	Cosmetic changes.

	* _urllib2_wrappers.py: Cosmetic changes

2006-09-12  Vincent Ladeuil  <v.ladeuil@alplog.fr>
        Separate urllib2 wrappers from core webdav.

	* _urllib2_wrappers.py:
	New file. Initialized from webdav.py.

	* webdav.py:
	Move all urllib wrappers to their own file.

2006-09-12-1  Vincent Ladeuil  <v.ladeuil@alplog.fr>
	First version handling automatic redirection.

	* webdav.py:
	(Response): Renamed from HTTPRespone to be coherent with Request.
	(Response.begin): Override httplib.HTTPResponse.begin to purge the
	socket of an optional message nobody cares for.
	(AbstractHTTPConnection): New class to better define HTTPConection
	and HTTPSConnection.
	(AbstractHTTPConnection.fake_close): New method.
	(Request.__init__): New 'parent' and 'redirected_to' attributes to
	handle redirection.
	(AbstractHTTPHandler.do_open): Convert to addinfourl only when
	needed.
	(HTTPRedirectHandler): New class.
	(HTTPErrorProcessor.http_response): Reorder error codes.
	(HttpDavTransport._opener): We can redirect now.
	(HttpDavTransport._head): No message, fake_close the socket.
	(HttpDavTransport._get): fake_close the socket when needed.

2006-09-10  Vincent Ladeuil  <v.ladeuil@alplog.fr>
	Merge jam fixes.

2006-09-10  Vincent Ladeuil  <v.ladeuil@free.fr>
	Cleaning. New simpler Request syntax.

	* webdav.py
	(HTTPSConnection, ConnectionHandler.https_request, HTTPSHandler):
	We don't have to test for hasattr(httplib, 'HTTPS'), urllib2 have
	already done that.
	(Request): Change the signature to make creation of specific
	requests easier.
	(PUTRequest): Moved closer to ReQuest. Add 'Content-Type' header.
	(AbstractHTTPHandler): New class. Cleaner sharing of methods
	between HTTPHanler and HTTPSHandler. Needs to specify
	handler_order to work around a bug in urllib2.build_opener
	bug (which mentions urllib2.HTTPHandler and (conditionally
	urllib2.HTTPSHandler) as default handlers instead of
	urllib2.AbstractHTTPHandler).
	(GETRequest, HEADRequest, MKCOLRequest, COPYRequest, MOVERequest,
	DELETERequest): Deleted. The new Request signature make it easy to
	write them inline.
	(HttpDavTransport): Uses the new syntax for the Request objects.

	* test_webdav.py: 
	Cosmetic change.

2006-09-08  Vincent Ladeuil  <v.ladeuil@alplog.fr>
	Small fixes after more tests. Can't handle redirect yet (see FIXME).

	* webdav.py:
	(HTTPResponse): New class to replace the use of addinfourl buggy
	with persistent connections, sometimes.
	(ConnectionHandler.get_key): New method.
	(ConnectionHandler): Fix various typos.
	(HTTPHandler.do_open): Replace addinfourl object with our own
	HTTPResponse.

	* test_webdav.py:
	(TestingDAVRequestHandler.send_error): New
	method. BaseHTTPServer.BaseHTTPRequestHandler drives
	htmllib.getresponse nuts, cool dowm guys.

2006-09-08-1  Vincent Ladeuil  <v.ladeuil@alplog.fr>
        Simplify urllib implementation. Drop pycurl support.

	* webdav.py:
	Simplify design. Drop pycurl support.
	(HttpDavTransport_pycurl): Deleted. Droped. Use bzr if you're
	interested :)
	(URLDirector): Deleted.
	(build_url_director): Deleted.
	(ConnectionHandler): Added, but mostly inactive. Reworked to
	capture connection on the fly instead of always injecting them.
	(HTTPHandler): New class. Far simpler to override do_open.
	(HTTPErrorProcessor): Don't let the errors we are interested be
	handled by the framework.
	(HttpDavTransport._opener): New attribute.
	(HttpDavTransport._first_connection): Now the connection comes
	from the request. Or not. But we don't create it anymore.
	(HttpDavTransport._perform): Mostly transfered in
	HTTPHandler.do_open.
	(HTTPErrorProcessor): New class.
	(get_test_permutations): Drop pycurl.

	* test_webdav.py:
	(HttpServer_Dav._url_protocol): Drop pycurl.
	(HttpServer_Dav_append._url_protocol): Drop pycurl.

	* __init__.py: 
	Drop pycurl.

2006-09-08-1  Vincent Ladeuil  <v.ladeuil@alplog.fr>
        First urllib-based implementation able to branch bzr.dev.

	Test server more versatile too.

	* webdav.py:
	(HttpDavTransport_pycurl): Renamed from HttpDavTransport.
	(HttpDavTransport_pycurl.mkdir): Use elif.
	(URLDirector): New class to obtain HTTPConnection objects.
	(build_url_director): build_opener sibling to be used with
	URLDirector.
	(HTTPConnection): httplib.HTTPConnection daughter class to
	workaround borked connections. May disappear if a btter solution
	is found.
	(HTTPHandler): New class allowing Connection subclassing at
	creation time. Part of the connection sharing strategy.
	(HttpDavTransport_urllib): The urilib-based implementation itself.
	(Request): New class to allows creation of new request types.
	(get_test_permutations): Default to urlib-based implementation.

	* test_webdav.py:
	Make the test server more versatile.
	(TestingDAVRequestHandler.read_body): New sub. We may be talking
	with clients unable to handle the 'chunked' encoding.
	(TestingDAVRequestHandler.read_chunk): Renamed from _read_chunk.
	(TestingDAVRequestHandler.do_PUT): We may talking with clients
	unable to handle the '100-continue' response and the 'chunked'
	encoding.
	(TestingDAVAppendRequestHandler.do_APPEND): We may talking with
	clients unable to handle the '100-continue' response and the
	'chunked' encoding.
	(HttpServer_Dav_append): Inherits from HttpServer directly (thre
	was no point inheriting from HttpServer_PyCurl except ignorance
	:). Switch to urllib for the desired client.

	* __init__.py: 
	Register transports for the urllib-based implementation.

2006-09-07  Vincent Ladeuil  <v.ladeuil@alplog.fr>
        Takes jam *_{file|bytes}[_non_atomic] patch into account.
	
	* webdav.py:
	(HttpDavTransport.append_file): Renamed from append.
	(HttpDavTransport.put_file): Renamed from put.
	(HttpDavTransport.put_file_non_atomic): Renamed from
	_put_file. Takes new create_parent_dir parameter into
	account. Protect file position in case something goes wrong at
	first try.

2006-09-05  Vincent Ladeuil  <v.ladeuil@alplog.fr>
	Small cleanup.

	* test_webdav.py:
	(TestingDAVRequestHandler): Makes _RANGE_HEADER_RE a static
	attribute.

2006-09-01  Vincent Ladeuil  <v.ladeuil+lp@free.fr>
	Cosmetic changes.

	* webdav.py: 
	Do not try to import pycurl to check dependencies, http._pycurl
	will do that fairly well itself.
	(HttpDavTransport.put): Delete unused variable.

2006-08-29  Vincent Ladeuil  <v.ladeuil+lp@free.fr>
        PUT can do append ! Rejoice !

	* webdav.py:
	Add and update TODOs.
	(HttpDavTransport.__init__):  Declare _accept_ranges,  defaults to
	True.
	(HttpDavTransport._head): New method.
	(HttpDavTransport.append):     Select _append_by_head_put or
	_append_by_get_put depending on _accept_ranges.
	(HttpDavTransport._append_by_head_put): New method.
	(HttpDavTransport._append_by_get_put):  New   method  (was  append
	before).
	(HttpDavTransport.put): Uses _put_file do provide an atomic PUT.
	(HttpDavTransport._put_file): New method doing a bare PUT.
	(HttpDavTransport._put_ranged):   New  method  helping   doing  an
	appended PUT.

	* test_webdav.py: 
	Add more TODOs.
	(TestingDAVRequestHandler.do_PUT):  Handle  Content-Range optional
	header to do appends.

	* __init__.py: 
	Requires bzr >= 0.11.0dev.

2006-08-28  Vincent Ladeuil  <v.ladeuil+lp@free.fr>
        Prepare merge.

	* webdav.py:
	Add TODOs for  looking at PATCH with Apache and doing
	an urllib implementation. Othe cosmetic changes.

	* test_webdav.py: 
	Fix spurious spaces.

	* NOTES: 
	(Extensions): Remark about PATCH in Apache.

2006-08-27  Vincent Ladeuil  <v.ladeuil+lp@free.fr>
	Implements https://features.launchpad.net/products/bzr.webdav/+spec/curl-persistence.
	
	* webdav.py:
	(HttpDavTransport.__init__):  Copy  the  shared curl  object  when
	cloning.
	(HttpDavTransport._set_curl_common_options):      New      method.
	Initialize the shared curl object.
	(HttpDavTransport._set_curl_options):  New   method.   Reset  used
	options to facilitate sharing of the curl object.
	(HttpDavTransport._add_header): New method.
	(HttpDavTransport._perform): New method.
	(HttpDavTransport.has, HttpDavTransport._get_full,
	HttpDavTransport._get_ranged):    New    methods,   copied    from
	PyCurlTransport but using the shared curl object.
	(HttpDavTransport.mkdir, HttpDavTransport.copy,
	HttpDavTransport.put, HttpDavTransport.rename,
	HttpDavTransport.move, HttpDavTransport.delete): Modified  to use
	the shared curl objects.

	* test_webdav.py:
	(TestingDAVRequestHandler.do_PUT): Cosmetic change.

2006-08-26  Vincent Ladeuil  <v.ladeuil+lp@free.fr>
	Add classes to allow testing of APPEND command on future web servers.
	
	* webdav.py:
	(get_test_permutations):   Require   the   testing  of   the   new
	HttpServer_Dav_append server.

	* test_webdav.py:
	(TestingDAVAppendRequestHandler): New class.
	(HttpServer_Dav_append): New class.

2006-08-24  Vincent Ladeuil  <v.ladeuil+lp@free.fr>
        Accept 204 as a valid put result.
	
	* webdav.py:
	(HttpDavTransport.rename): Add some explanations.
	(HttpDavTransport.move):  204 is  also a  valid  code representing
	successful completion.

2006-08-24  Vincent Ladeuil  <v.ladeuil+lp@free.fr>
        Ensures that put is atomic.
	
	* webdav.py:
	(HttpDavTransport.put):  Makes  sure the  put  is  atomic even  on
	non-conforming servers.

	* __init__.py: 
	Check  the  bzr version  here,  no need  to  import  just to  say:
	"Finally, I can't work".

2006-08-23  Vincent Ladeuil  <v.ladeuil+lp@free.fr>
        Another fix recommanded by jam

	* test_webdav.py:
	(TestingDAVRequestHandler._read_chunk): Don't use string.atoi.

2006-08-23-1  Vincent Ladeuil  <v.ladeuil+lp@free.fr>

	* test_webdav.py:
	(TestingDAVRequestHandler._read_chunk): Don't use string.atoi.

	* __init__.py: 
	Lazily register the  transports so that the module  is loaded when
	needed.

	* webdav.py: 
	Check the  bzr version and requires  a dev one. We  are not mature
	enough.
	Check pycurl availability before importing transport.http._pycurl.  
	Transports registration is now done in __init__.py (jam hint).
	(HttpDavTransport.__init__): Use the class name when calling super
	or it will create a loop if called by the daughter class :( Assert
	we can handle the protocol.
	(HttpDavTransport.put): Mentions that put  is atomic (by virtue of
	RFC2068). Don't handle string object anymore.
	(HttpDavTransport.rename):   Rename  should   not   overwrite  the
	destination URI.
	(get_test_permutations): import test_webdav when required only.

	* test_webdav.py: New file, extracted from webdav.py.
	(TestingDAVRequestHandler.do_COPY):  RFC2518  not  RFC2519!   Damn
	hhtp!
	(TestingDAVRequestHandler.do_MOVE):  Handles the  Overwrite header
	to conform  to bzr expectations concerning the  POSIX semantics of
	move and rename (thanks jam for the explanation).
	(HttpServer_Dav.__init__): Use  the class name  when calling super
	or it will create a loop if called by the daughter class :(

2006-08-23  Vincent Ladeuil  <v.ladeuil+lp@free.fr>

	* webdav.py:
	(HttpDavTransport.put): Should we really recognize 404 there ?
	(TestingDAVRequestHandler._retry_if_not_available):  Tries to work
	around Mac OS X strange socket behavior.
	(TestingDAVRequestHandler._read,
	TestingDAVRequestHandler._readline): New methods.
	(TestingDAVRequestHandler.do_PUT): Catches more exceptions.

2006-08-22  Vincent Ladeuil  <v.ladeuil+lp@free.fr>

	* webdav.py:
	(HttpDavTransport.mkdir,                     HttpDavTransport.copy,
	HttpDavTransport.move,        HttpDavTransport.delete):        Use
	_set_curl_options to unify the use of curl.
	(HttpDavTransport.put): Use _set_curl_options  to unify the use of
	curl. Translate 403 as NoSuchFile too.

2006-08-22-1  Vincent Ladeuil  <v.ladeuil+lp@free.fr>

	*  webdav.py: Add  more TODOs  and FIXMEs  :-) Put  at  least this
	version passes bzr selftest (except for lock_write and copy_to for
	which need and.or intent is not clear.
	(HttpDavTransport.__init__,         _set_curl_options):        Use
	self.__class__.   We don't want  to change  the super()  call each
	time the class is renamed.
	(mkdir): Quotes should be right. Even in comment, even in jokes:-)
	(HttpDavTransport.copy): New method.
	(HttpDavTransport.put): 204! We expect 204 not 404.
	(HttpDavTransport.move): Raise exceptions on errors.
	(HttpDavTransport.delete):  Horrrrrrible workaround.   Try  to get
	devs advice asap.
	(TestingDAVRequestHandler,  HttpServer_Dav):  First implementation
	of a test server.

2006-08-20  Vincent Ladeuil
	First succesful  bzr.dev push.  Requires that bzr.dev  allows dirs
	for http.

	* webdav.py:
	(HttpDavTransport):  Renamed from  WebDavTransport,  but there  is
	HttpTransport_urllib and PyCurlTransport so it may change again...
	(HttpDavTransport._set_curl_options): New func, not yet used.
	(HttpDavTransport.mkdir):  Absorbs  data  otherwise  displayed  on
	stdout by libcurl.
	(HttpDavTransport.append): Documents that the position returned is
	the  one *before* the  append takes  place. The  implementation is
	still naive, but at least correct :-)
	(HttpDavTransport.put): Can be called  with a file-like object *or
	a  string* !  Handles the  string case.  Can also  be  called when
	intermediate directories are missing.
	(HttpDavTransport.move): Absorbs  data  otherwise  displayed  on
	stdout by libcurl.
	(HttpDavTransport.delete): Absorbs  data  otherwise  displayed  on
	stdout by libcurl.

 	* NOTES: 
	New file.
	
	* TODO: 
	New file.

2006-08-17  Vincent Ladeuil
	First version accepting an initial push.

	* __init__.py: 
	New file.

	* webdav.py:
	New file.

